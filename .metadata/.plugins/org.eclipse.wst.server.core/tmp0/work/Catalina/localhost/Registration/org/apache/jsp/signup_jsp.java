/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2022-03-17 14:37:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"ISO-8859-1\">\r\n");
      out.write("    <title>JSP Page</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<!-- Compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- Compiled and minified JavaScript -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("    .loading {\r\n");
      out.write("        display: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body style=\"background: url(https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg); background-size:cover; background-attachment:fixed;\">\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col m6 offset-m3\">\r\n");
      out.write("            <div class=\"card\">\r\n");
      out.write("                <div class=\"card-content center-align\">\r\n");
      out.write("                    <h3>Register Here !!</h3>\r\n");
      out.write("                    <h6 class=\"msg center-align\"></h6>\r\n");
      out.write("                    <div class=\"form center-align\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <!-- Creating Form -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <form action=\"Register\" method=\"post\" id=\"myform\">\r\n");
      out.write("                            <input type=\"text\" name=\"user_name\" placeholder=\"Enter user name\">\r\n");
      out.write("                            <input type=\"password\" name=\"user_pass\" placeholder=\"Enter user Password\">\r\n");
      out.write("                            <input type=\"email\" name=\"user_email\" placeholder=\"Enter User Email\">\r\n");
      out.write("                            <div class=\"file-field input-field\">\r\n");
      out.write("                                <div class=\"btn\">\r\n");
      out.write("                                    <span>File</span>\r\n");
      out.write("                                    <input name=\"image\" type=\"file\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"file-path-wrapper\">\r\n");
      out.write("                                    <input class=\"file-path validate\" type=\"text\" placeholder=\"Select File to Upload\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <button type=\"submit\" class=\"btn\">Submit</button>\r\n");
      out.write("\r\n");
      out.write("                        </form>\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"loading\">\r\n");
      out.write("                        <div class=\"preloader-wrapper big active\">\r\n");
      out.write("                            <div class=\"spinner-layer spinner-blue\">\r\n");
      out.write("                                <div class=\"circle-clipper left\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"gap-patch\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"circle-clipper right\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"spinner-layer spinner-red\">\r\n");
      out.write("                                <div class=\"circle-clipper left\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"gap-patch\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"circle-clipper right\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"spinner-layer spinner-yellow\">\r\n");
      out.write("                                <div class=\"circle-clipper left\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"gap-patch\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"circle-clipper right\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"spinner-layer spinner-green\">\r\n");
      out.write("                                <div class=\"circle-clipper left\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"gap-patch\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"circle-clipper right\">\r\n");
      out.write("                                    <div class=\"circle\"></div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <h1>Please Wait...</h1>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    4\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"\r\n");
      out.write("        integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("    $(\".btn\").onclick(function () {\r\n");
      out.write("        $(\".loading\").style.display(\"block\");\r\n");
      out.write("        $(\".form\").style.display(\"none\");\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("    $(document).ready(function () {\r\n");
      out.write("        console.log(\"page is ready..\")\r\n");
      out.write("\r\n");
      out.write("        $(\"#myform\").on('submit', function (event) {\r\n");
      out.write("            event.preventDefault();  //prevents the default function of submit\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            /* if we have only text inputs we can use serialize but it may not be compatible with image input\r\n");
      out.write("\r\n");
      out.write("            var f=$(this).serialize();  // it will have data in key-value pairs\r\n");
      out.write("            console.log(f); */\r\n");
      out.write("\r\n");
      out.write("            //if we have image input\r\n");
      out.write("            let f = new FormData(this);\r\n");
      out.write("            console.log(f);\r\n");
      out.write("\r\n");
      out.write("            $('.loading').show();\r\n");
      out.write("            $('.form').hide();\r\n");
      out.write("\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"Register\",\r\n");
      out.write("                data: f,\r\n");
      out.write("                type: 'POST',\r\n");
      out.write("\r\n");
      out.write("                //success function\r\n");
      out.write("                //success(result,status,jqXHR)\r\n");
      out.write("                //jqXHR is jqeury XMLHttpRequest\r\n");
      out.write("                success: function (data, textStatus, jqXHR) {\r\n");
      out.write("                    console.log(data);\r\n");
      out.write("                    console.log(\"Success....\")\r\n");
      out.write("                    $('.loading').hide();\r\n");
      out.write("                    $('.form').show();\r\n");
      out.write("                    $(\".msg\").html(data);\r\n");
      out.write("                    $(\".msg\").addClass(\"green-text\");\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                },\r\n");
      out.write("                //error function to handle when a error occures\r\n");
      out.write("                //error(jqXHR,status,error)\r\n");
      out.write("                error: function (jqXHR, textStatus, errorThrown) {\r\n");
      out.write("                    console.log(data);\r\n");
      out.write("                    console.log(\"Error....\")\r\n");
      out.write("                    $(\".msg\").html(\"Something Went Wrong...!!\");\r\n");
      out.write("                    $(\".msg\").addClass(\"red-text\");\r\n");
      out.write("\r\n");
      out.write("                },\r\n");
      out.write("\r\n");
      out.write("                /* processData	A Boolean value specifying whether or not data sent with the request should be transformed into a query string. Default is true */\r\n");
      out.write("                processData: false,\r\n");
      out.write("\r\n");
      out.write("                /* contentType	The content type used when sending data to the server. Default is: \"application/x-www-form-urlencoded\" */\r\n");
      out.write("                contentType: false,\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        })\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
